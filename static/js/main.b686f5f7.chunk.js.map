{"version":3,"sources":["components/Contacts/Contacts.module.css","icons/delete.svg","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selector.js","redux/contacts/contacts-reduser.js","components/Contacts/ContactForm.js","components/Contacts/Filter.js","components/Contacts/ContactList.js","App.js","redux/store.js","index.js"],"names":["module","exports","_path","_path2","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactSuccess","addContactsError","addContactRequest","changeFilter","deleteContactSuccess","deleteContactsError","deleteContactRequest","name","number","dispatch","a","item","actions","axios","post","data","contactId","delete","then","catch","error","get","getValue","state","contacts","filter","getVisibleContacts","createSelector","items","filterLowerCase","toLowerCase","includes","createReducer","_","payload","map","contact","alert","id","combineReducers","ContactForm","addList","shortid","generate","setState","prevState","loginInputId","handleInputChange","evt","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","contactsBlock","this","formName","input","type","onChange","pattern","title","required","button","Component","connect","contactsOperations","contactsSelector","contactsActions","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDelete","_ref","svgRef","titleId","xmlns","viewBox","ref","d","fill","ForwardRef","contactList","onDeleteContact","contactItem","onClick","buttonDelete","width","height","App","fetchContacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReduser","devContacts","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b686f5f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Contacts_App__1zGy2\",\"input\":\"Contacts_input__3-qCH\",\"button\":\"Contacts_button__3vpXq\",\"buttonDelete\":\"Contacts_buttonDelete__2UTc8\",\"contactsBlock\":\"Contacts_contactsBlock__QgLWd\",\"contactItem\":\"Contacts_contactItem__x4h94\"};","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.5575697b.svg\";\nexport { ForwardRef as ReactComponent };","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetchContactsRequest\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetchContactsSuccess\");\r\nconst fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactsError = createAction(\"contacts/addContactsError\");\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\n\r\nconst changeFilter = createAction(\"contacts/filter\");\r\n\r\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\r\nconst deleteContactsError = createAction(\"contacts/deleteContactsError\");\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\n\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  changeFilter,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactsError,\r\n  deleteContactSuccess,\r\n  deleteContactsError,\r\n  deleteContactRequest,\r\n};\r\n","import axios from \"axios\";\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"http://localhost:4040/contacts\")\r\n    .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactsError(error)));\r\n};\r\n\r\nconst submit =\r\n  ({ name, number }) =>\r\n  async (dispatch) => {\r\n    const item = { name, number };\r\n\r\n    dispatch(actions.addContactRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post(\"http://localhost:4040/contacts\", item);\r\n      dispatch(actions.addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(actions.addContactsError(error));\r\n    }\r\n\r\n    // axios.post('http://localhost:4040/contacts', item)\r\n    // .then(({data}) =>dispatch(actions.addContactSuccess(data)))\r\n    // .catch(error => dispatch(actions.addContactsError(error)))\r\n  };\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n  axios\r\n    .delete(`http://localhost:4040/contacts/${contactId}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(actions.deleteContactsError(error)));\r\n};\r\n\r\nexport default {\r\n  submit,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst getValue = (state) => state.contacts.filter;\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getValue, getAllContacts],\r\n  (filter, items) => {\r\n    const filterLowerCase = filter.toLowerCase();\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(filterLowerCase)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getValue,\r\n  getVisibleContacts,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contacts-actions\";\r\n\r\nconst {\r\n  fetchContactsSuccess,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  changeFilter,\r\n} = actions;\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) =>\r\n    state.map((contact) => contact.name).includes(payload.name)\r\n      ? alert(`${payload.name} is already in contacts.`)\r\n      : [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport shortid from \"shortid\";\r\nimport { contactsOperations } from \"../../redux/contacts\";\r\n\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  addList = (name, number) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState((prevState) => ({\r\n      contacts: [contact, ...prevState.contacts],\r\n    }));\r\n  };\r\n\r\n  loginInputId = shortid.generate();\r\n\r\n  handleInputChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({\r\n      id: shortid.generate(),\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.contactsBlock}>\r\n        <form onSubmit={this.handleSubmit} className={styles.formName}>\r\n          <label id={this.loginInputId}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type='text'\r\n              name='name'\r\n              value={this.state.name}\r\n              onChange={this.handleInputChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label id={this.loginInputId}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type='tel'\r\n              name='number'\r\n              value={this.state.number}\r\n              onChange={this.handleInputChange}\r\n              pattern='\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}'\r\n              title='Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +'\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.button} type='submit'>\r\n            Add conract\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (contact) => dispatch(contactsOperations.submit(contact)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsActions, contactsSelector } from \"../../redux/contacts\";\r\n\r\nimport styles from \"./Contacts.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={styles.contactsBlock}>\r\n    <label>\r\n      Find contact by name\r\n      <input\r\n        className={styles.input}\r\n        type='text'\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: contactsSelector.getValue(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (evt) =>\r\n    dispatch(contactsActions.changeFilter(evt.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./Contacts.module.css\";\r\nimport { ReactComponent as CloseIcon } from \"../../icons/delete.svg\";\r\nimport { contactsSelector, contactsOperations } from \"../../redux/contacts\";\r\n\r\nconst ContactList = ({ contactList, onDeleteContact }) => (\r\n  <>\r\n    <ul className={styles.contactsBlock}>\r\n      {contactList.map(({ name, number, id }) => (\r\n        <li className={styles.contactItem} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            onClick={() => onDeleteContact(id)}\r\n            className={styles.buttonDelete}\r\n            aria-label='Видалити контакт'\r\n          >\r\n            <CloseIcon width='20' height='20' fill='#fff' />\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contactList: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contactList: contactsSelector.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (contactId) =>\r\n    dispatch(contactsOperations.deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/Contacts/ContactForm\";\nimport Filter from \"./components/Contacts/Filter\";\nimport ContactList from \"./components/Contacts/ContactList\";\nimport styles from \"./components/Contacts/Contacts.module.css\";\nimport { connect } from \"react-redux\";\nimport { contactsOperations } from \"./redux/contacts\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className={styles.App}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport { contactsReduser } from \"./contacts\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReduser },\r\n  middleware,\r\n  devContacts: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}